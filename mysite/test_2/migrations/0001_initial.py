# Generated by Django 3.0.5 on 2020-04-24 22:47

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('want_to_be_matched', models.IntegerField(default=0)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            options={
                'verbose_name_plural': 'cities',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('city', models.CharField(max_length=200)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=200)),
                ('group', models.CharField(default='None', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Up_For',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest_free_text', models.CharField(default='None', max_length=200)),
                ('interest', models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, to='test_2.Skills')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Passions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passion_free_text', models.CharField(default='None', max_length=200)),
                ('passion', models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, to='test_2.Skills')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Matched',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('colab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='test_2.Collaboration')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Colab_Up_For',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest_free_text', models.CharField(default='None', max_length=200)),
                ('colab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='test_2.Collaboration')),
                ('interest', models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, to='test_2.Skills')),
            ],
        ),
        migrations.CreateModel(
            name='Colab_Passions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passion_free_text', models.CharField(default='None', max_length=200)),
                ('colab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='test_2.Collaboration')),
                ('passion', models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, to='test_2.Skills')),
            ],
        ),
        migrations.CreateModel(
            name='Colab_Business_Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience_free_text', models.CharField(default='None', max_length=200)),
                ('colab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='test_2.Collaboration')),
                ('experience', models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, to='test_2.Skills')),
            ],
        ),
        migrations.CreateModel(
            name='Colab_Assigned_Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_skill_free_text', models.CharField(default='None', max_length=200)),
                ('assigned_skill', models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, to='test_2.Skills')),
                ('colab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='test_2.Collaboration')),
            ],
        ),
        migrations.CreateModel(
            name='Business_Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience_free_text', models.CharField(default='None', max_length=200)),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='test_2.Skills')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Assigned_Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_skill_free_text', models.CharField(default='None', max_length=200)),
                ('assigned_skill', models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, to='test_2.Skills')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='test_2.City'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
